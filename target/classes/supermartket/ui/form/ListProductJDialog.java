/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package supermartket.ui.form;

import java.awt.BorderLayout;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import net.miginfocom.swing.MigLayout;
import supermartket.dao.CreateListener;
import supermartket.dao.CreateProductImportReceiptListener;
import supermartket.dao.CustomerDAO;
import supermartket.dao.InvoiceDetailDAO;
import supermartket.dao.ProductCategoryDAO;
import supermartket.dao.ProductDAO;
import supermartket.dao.SupplierDAO;
import supermartket.dao.dto.ProductImportReceipt;
import supermartket.dao.dto.SearchProductDTO;
import supermartket.dao.impl.CartItemSell;
import supermartket.dao.impl.CustomerDAOImpl;
import supermartket.dao.impl.InvoiceDAOImpl;
import supermartket.dao.impl.InvoiceDetailDAOImpl;
import supermartket.dao.impl.ProductCategoryDAOImpl;
import supermartket.dao.impl.ProductDAOImpl;
import supermartket.dao.impl.SupplierDAOImpl;
import supermartket.entity.Customer;
import supermartket.entity.Product;
import supermartket.entity.ProductCategory;
import supermartket.entity.Supplier;
import supermartket.pagination.EventPagination;
import supermartket.ui.comp.CartItem;

public class ListProductJDialog extends javax.swing.JDialog {

    ProductDAO dao = new ProductDAOImpl();
    ProductCategoryDAO cateDao = new ProductCategoryDAOImpl();
    CustomerDAO cusDao = new CustomerDAOImpl();
    SupplierDAO supDao = new SupplierDAOImpl();
    InvoiceDAOImpl invoiceDao = new InvoiceDAOImpl();
    InvoiceDetailDAO invoiceDetailDao = new InvoiceDetailDAOImpl();
    ArrayList<String> listSearchProduct = new ArrayList<>();

    List<Product> list = List.of();
    List<CartItemSell> listCartItem = new ArrayList<>();
    List<ProductCategory> listCate = cateDao.findAll();
    List<Customer> listCus = cusDao.findAll();
    List<Supplier> listSup = supDao.findAll();

    CreateProductImportReceiptListener lis = null;

    /**
     * Creates new form ListProductJDialog
     */
    public ListProductJDialog(java.awt.Frame parent, boolean modal, ArrayList<String> listProducts, CreateProductImportReceiptListener listener) {
        super(parent, modal);
        initComponents();
        lis = listener;
        listSearchProduct = listProducts;
        SearchProductDTO search = new SearchProductDTO("", null, null, null, listProducts, 1);
        list = dao.findBySearch(search);

        pagination1.addEventPagination(new EventPagination() {
            @Override
            public void pageChanged(int page) {
                fillTable(1);
            }

        });
        fillTable(1);
    }

    public void fillTable(int page) {
        String cateId = null;
        String supId = null;
        for (ProductCategory category : listCate) {
            if (category.getCategoryName().equalsIgnoreCase(cboCategory.getSelectedItem().toString())) {
                cateId = category.getCategoryID();
                break;
            }
        }
        for (Supplier sup : listSup) {
            if (sup.getSupplierName().equalsIgnoreCase(cboSupplier.getSelectedItem().toString())) {
                supId = sup.getSupplierID();
                break;
            }
        }
        SearchProductDTO dto = new SearchProductDTO(txtSearch.getText().trim(), cateId, supId, null, listSearchProduct, page);
        list = dao.findBySearch(dto);
        int count = dao.getTotalItem(dto).getCount();
        int limit = 10;
        int totalPage = (int) Math.ceil((double) count / limit);
        pagination1.setPagegination(page, totalPage);
        fillCartItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        pagination1 = new supermartket.pagination.Pagination();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        mainPanel = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        cboSupplier = new javax.swing.JComboBox<>();
        cboCategory = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(217, 217, 217)));
        jPanel4.setPreferredSize(new java.awt.Dimension(900, 750));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Chọn sản phẩm");

        mainPanel.setPreferredSize(new java.awt.Dimension(800, 642));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );

        btnSearch.setText("Lọc");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cboSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cboSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSupplierActionPerformed(evt);
            }
        });

        cboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cboCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(pagination1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pagination1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        fillTable(1);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cboSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSupplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSupplierActionPerformed

    private void cboCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCategoryActionPerformed
    public void fillCartItem() {
        mainPanel.removeAll();
        JPanel panel = new JPanel(new MigLayout("wrap 3", "[grow, fill]", "[]"));
        for (Product prod : list) {
            panel.add(new CartItem(prod, (Product product) -> {
                int quantity = -1;
                do {
                    String input = JOptionPane.showInputDialog(null, "Nhập số lượng:");
                    if (input == null) {
                        JOptionPane.showMessageDialog(null, "Hủy nhập số lượng.");
                        break;
                    }
                    try {
                        quantity = Integer.parseInt(input);
                        if (quantity <= 0) {
                            JOptionPane.showMessageDialog(null, "Vui lòng nhập số lớn hơn 0.");
                            quantity = -1;
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Vui lòng nhập một số nguyên hợp lệ.");
                    }
                } while (quantity <= 0);

                double price = -1;
                do {
                    String input = JOptionPane.showInputDialog(null, "Nhập giá:");
                    if (input == null) {
                        JOptionPane.showMessageDialog(null, "Hủy nhập giá.");
                        break;
                    }
                    try {
                        price = Double.parseDouble(input);
                        if (quantity <= 0) {
                            JOptionPane.showMessageDialog(null, "Vui lòng nhập số lớn hơn 0.");
                            quantity = -1;
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Vui lòng nhập một số nguyên hợp lệ.");
                    }
                } while (price <= 0);

                if (quantity > 0) {
                    list.remove(prod);
                    fillCartItem();
                    listSearchProduct.add(prod.getProductID());
                    lis.onCreate(new ProductImportReceipt(prod.getProductID(), null, null, quantity, BigDecimal.valueOf(price)));
                    this.dispose();
                }
            }));
        }
        JScrollPane scrollPaneItems = new JScrollPane(panel);
        scrollPaneItems.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        mainPanel.setLayout(new BorderLayout());
        mainPanel.add(scrollPaneItems, BorderLayout.CENTER);
        mainPanel.revalidate();
        mainPanel.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListProductJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListProductJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListProductJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListProductJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ArrayList<String> items = new ArrayList<>();
                ListProductJDialog dialog = new ListProductJDialog(new javax.swing.JFrame(), true, items, new CreateProductImportReceiptListener() {
                    @Override
                    public void onCreate(ProductImportReceipt item) {
                    }
                });
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cboCategory;
    private javax.swing.JComboBox<String> cboSupplier;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel mainPanel;
    private supermartket.pagination.Pagination pagination1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
